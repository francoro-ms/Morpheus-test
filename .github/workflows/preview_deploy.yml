name: Preview Deploy
on:
  pull_request:
    types: [opened, synchronize]

env:
  S3_BUCKET: cloudfront-lambda-edge-dev

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
          registry-url: 'https://npm.pkg.github.com'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.VAS_BUILD_TOKEN }}

      - uses: actions/cache@v1
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Install Deps
        run: yarn install --frozen-lockfile
        env:
          NODE_AUTH_TOKEN: ${{ secrets.VAS_BUILD_TOKEN }}

      - name: Build
        run: yarn run react-scripts --max_old_space_size=4096 build
        env:
          NODE_AUTH_TOKEN: ${{ secrets.VAS_BUILD_TOKEN }}
          REACT_APP_ENV: staging
          REACT_APP_API_HOST: https://platform-api-staging.vas.com/api/
          NODE_ENV: production
          REACT_APP_ENABLE_DEV_TOOLS: true

      - name: Deploy
        run: |
          aws s3 sync build s3://${{ env.S3_BUCKET }}/platform-${{ github.event.pull_request.number }} --delete --acl public-read --cache-control 'max-age=2419200, must-revalidate, public'
          aws s3 cp s3://${{ env.S3_BUCKET }}/platform-${{ github.event.pull_request.number }}/index.html s3://${{ env.S3_BUCKET }}/platform-${{ github.event.pull_request.number }}/index.html --metadata-directive REPLACE --cache-control 'no-cache, no-store, must-revalidate'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: 'us-east-1'

      - name: Update Status
        if: success()
        uses: ./.github/actions/status-update
        with:
          REPO_TOKEN: ${{ secrets.VAS_BUILD_TOKEN }}
