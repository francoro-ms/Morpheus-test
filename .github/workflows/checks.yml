name: Checks

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  i18n_lint:
    name: I18n Lint
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Run Lint
        uses: vas-dev/vas-actions/i18n-linter@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TRANSLATION_PATH: src/resources/locales/translations.en.json

  code_lint:
    name: Code Lint - ESLint
    runs-on: ubuntu-latest
    env:
      CI: true
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
          registry-url: 'https://npm.pkg.github.com'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.VAS_BUILD_TOKEN }}
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      - name: Install Deps
        run: yarn install --frozen-lockfile
        env:
          NODE_AUTH_TOKEN: ${{ secrets.VAS_BUILD_TOKEN }}
      - name: Run Lint
        run: yarn lint

  stylelint:
    name: Code Lint - CSS Styles
    runs-on: ubuntu-latest
    env:
      CI: true
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
          registry-url: 'https://npm.pkg.github.com'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.VAS_BUILD_TOKEN }}
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      - name: Install Deps
        run: yarn install --frozen-lockfile
        env:
          NODE_AUTH_TOKEN: ${{ secrets.VAS_BUILD_TOKEN }}
      - name: Run Lint
        run: yarn stylelint

  #   styledlint:
  #     name: Code Lint - styled-components
  #     runs-on: ubuntu-latest
  #     env:
  #       CI: true
  #     steps:
  #       - name: Checkout
  #         uses: actions/checkout@v2
  #       - name: Use Node.js 12.x
  #         uses: actions/setup-node@v1
  #         with:
  #           node-version: '12.x'
  #           registry-url: 'https://npm.pkg.github.com'
  #         env:
  #           NODE_AUTH_TOKEN: ${{ secrets.VAS_BUILD_TOKEN }}
  #       - name: Get yarn cache directory path
  #         id: yarn-cache-dir-path
  #         run: echo "::set-output name=dir::$(yarn cache dir)"
  #       - uses: actions/cache@v1
  #         id: yarn-cache
  #         with:
  #           path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
  #           key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
  #       - name: Install Deps
  #         run: yarn install --frozen-lockfile
  #         env:
  #           NODE_AUTH_TOKEN: ${{ secrets.VAS_BUILD_TOKEN }}
  #       - name: Run Lint
  #         run: yarn styledlint

  tests:
    name: Tests
    runs-on: ubuntu-latest
    env:
      CI: true
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
          registry-url: 'https://npm.pkg.github.com'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.VAS_BUILD_TOKEN }}
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      - name: Install Deps
        run: yarn install --frozen-lockfile
        env:
          NODE_AUTH_TOKEN: ${{ secrets.VAS_BUILD_TOKEN }}
      - name: Run tests
        run: yarn test --no-cache --coverage
      - name: Upload Coverage
        run: yarn codecov
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
